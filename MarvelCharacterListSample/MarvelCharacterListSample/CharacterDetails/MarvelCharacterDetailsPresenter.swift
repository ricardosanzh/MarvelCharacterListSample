//
//  MarvelCharacterDetailsPresenter.swift
//  MarvelCharacterListSample
//
//  Created by r.a.sanz.hinojosas on 08/09/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import Foundation

protocol MarvelCharacterDetailsPresentationLogic {
    func presentResponse(_ response: MarvelCharacterDetailsModel.Response)
}

final class MarvelCharacterDetailsPresenter {
    private weak var viewController: MarvelCharacterDetailsDisplayLogic?
    
    init(viewController: MarvelCharacterDetailsDisplayLogic?) {
        self.viewController = viewController
    }
}


// MARK: - MarvelCharacterDetailsPresentationLogic
extension MarvelCharacterDetailsPresenter: MarvelCharacterDetailsPresentationLogic {
    
    func presentResponse(_ response: MarvelCharacterDetailsModel.Response) {
        
        switch response {
        case .presentCharacterDetails(let resultDetails):
            self.presentDetails(resultDetails: resultDetails)
        }
    }
}


// MARK: - Private Zone
private extension MarvelCharacterDetailsPresenter {
    
    func presentDetails(resultDetails: ResultList) {
        let titleComicsTable = "Comics appearances"
        let descriptionLabel = "Descripion"
        let nameLabel = "Character name"
        
        var imageName: String?
        if let thumbnail = resultDetails.thumbnail, let path = thumbnail.path, let exten = thumbnail.exten {
            imageName = path + "." + exten
            
        }
        var characterName: String?
        var characterDescription: String?
        if let name = resultDetails.name, let description = resultDetails.descriptionField {
//            MarvelCharacterDetailsModel.CharacterModel(name: name, image: imageName, description: description)
            characterName = name
            characterDescription = description
        }
        self.viewController?.displayViewModel(.showDetailsInVC(viewModelData: MarvelCharacterDetailsModel.ViewDataSource(title: titleComicsTable, imageName: imageName, description: characterDescription ?? "", characterName: characterName ?? "")))
    }
}
